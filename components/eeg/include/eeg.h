/**********************************************************************
Copyright ? LIZ MEDICAL TECHNOLOGY Co., Ltd. 2022. All rights reserved.
文件名		: eeg.h
作者	  	: 刘有为 <458386139@qq.com>
版本	   	: V2.0
描述	   	: 脑电驱动头文件
其他	   	: 无
日志	   	: V2.0 2025/1/17 刘有为创建
***********************************************************************/
#ifndef __EEG_H__
#define __EEG_H__

#ifdef __cplusplus
extern "C"
{
#endif

#include <stdint.h>
#include "version.h"
#include "ads129x.h"

/* 定义错误码 */
typedef enum {
	EEG_FAIL = -1,
	EEG_OK = 0,
} EEG_ERR_T;

/* 功能状态 */
enum {
	EEG_STATE_IDLE = 0,
	EEG_STATE_ON = 1,
};

/* SPI gpio */
#define ADS129X_SPI_MISO				(GPIO_NUM_2)
#define ADS129X_SPI_MOSI				(GPIO_NUM_7)
#define ADS129X_SPI_CLK					(GPIO_NUM_6)
#define ADS129X_CS_GPIO 				(GPIO_NUM_20)
#define ADS129X_DRDY_GPIO 				(GPIO_NUM_19)
#define ADS129X_INTR_FLAG 				1

/* config1 */
#if (CONFIG_ADS129X_TYPE == 1294)
#define ADS1294_POWER_MODE 				HIGH_RATE_MODE
#endif
#define ADS129X_DAISY_MODE 				DAISY_CHAIN_MODE		/* 多通道连接方式:默认菊花链 */
#define ADS129X_CLK_EN					OSC_EN_OFF				/* 关闭降低功耗 */
#if (CONFIG_ADS129X_TYPE == 1294)
#if (ADS1294_POWER_MODE == HIGH_RATE_MODE)
#define ADS129X_DATA_RATE_DEFAULT		HR_FREQ_2_KHZ
#elif
#define ADS129X_DATA_RATE_DEFAULT		LP_FREQ_2_KHZ
#endif
#elif (CONFIG_ADS129X_TYPE == 1299)
#define ADS129X_DATA_RATE_DEFAULT		FREQ_2_KHZ
#endif

/* config2 */
#define ADS129X_TEST_FREQ_DEFAULT 		TEST_SIGNAL_FREQ_NOT_USE
#define ADS129X_TEST_AMP_DEFAULT 		TEST_SIGNAL_PGA1
#define ADS129X_TEST_SIGNAL_SOURCE 		GENERATE_INTERNAL
#if (CONFIG_ADS129X_TYPE == 1294)
#define ADS1294_WCT_CHOP 				WCT_FREQ_CHANGE
#endif

/* config3 */
#if (CONFIG_ADS129X_TYPE == 1294)
#define ADS1294_RLD_LOFF_SENS 			RLD_LOFF_SENS_OFF
#define ADS1294_RLD_PWR 				RLD_PWR_ON
#define ADS1294_RLD_REF_SRC 			RLD_REF_INTERNAL
#define ADS1294_RLD_MEAS 				RLD_MEAS_OPEN
#define ADS1294_VREF 					ADS1294_VERF_2P4V
#define ADS1294_INTER_BUF 				INTERNAL_BUF_ON
#elif (CONFIG_ADS129X_TYPE == 1299)
#define ADS1299_BIAS_LOFF_SENS 			BIAS_LOFF_SENS_OFF
#define ADS1299_PD_BIAS 				BIAS_PWR_ON
#define ADS1299_BIAS_REF_SOURCE 		BIAS_REF_INTERNAL
#define ADS1299_BIAS_MEAS 				BIAS_MEAS_OPEN
#define ADS1299_PD_REFBUF 				BIAS_REFBUF_ON
#endif

/* loff */
#define ADS129X_FLEAD 					AC_DETECT_NOT_USE
#define ADS129X_ILEAD 					LOFF_CURR_6NA
#if (CONFIG_ADS129X_TYPE == 1294)
#define ADS1294_VLEAD_EN 				RLD_PWR_OFF
#endif
#define ADS129X_COMP_TH 				POS_95_NEG_5

/* chn1set */
#define ADS129X_CHN1_PD					CHN_PD_ON
#if (CONFIG_ADS129X_TYPE == 1294)
#define ADS129X_CHN1_PGA_GAIN			PGA_GAIN_12
#elif (CONFIG_ADS129X_TYPE == 1299)
#define ADS129X_CHN1_PGA_GAIN			PGA_GAIN_6
#define ADS1299_CHN1_SRB2 				SRB2_CONNECT_OPEN
#endif
#define ADS129X_CHN1_MUX				CHN_NORMAL_INPUT
/* chn2set */
#define ADS129X_CHN2_PD					CHN_PD_ON
#if (CONFIG_ADS129X_TYPE == 1294)
#define ADS129X_CHN2_PGA_GAIN			PGA_GAIN_12
#elif (CONFIG_ADS129X_TYPE == 1299)
#define ADS129X_CHN2_PGA_GAIN			PGA_GAIN_6
#define ADS1299_CHN2_SRB2 				SRB2_CONNECT_OPEN
#endif
#define ADS129X_CHN2_MUX				CHN_NORMAL_INPUT
/* chn3set */
#define ADS129X_CHN3_PD					CHN_PD_ON
#if (CONFIG_ADS129X_TYPE == 1294)
#define ADS129X_CHN3_PGA_GAIN			PGA_GAIN_12
#elif (CONFIG_ADS129X_TYPE == 1299)
#define ADS129X_CHN3_PGA_GAIN			PGA_GAIN_6
#define ADS1299_CHN3_SRB2 				SRB2_CONNECT_OPEN
#endif
#define ADS129X_CHN3_MUX				CHN_NORMAL_INPUT
/* chn4set */
#define ADS129X_CHN4_PD					CHN_PD_ON
#if (CONFIG_ADS129X_TYPE == 1294)
#define ADS129X_CHN4_PGA_GAIN			PGA_GAIN_12
#elif (CONFIG_ADS129X_TYPE == 1299)
#define ADS129X_CHN4_PGA_GAIN			PGA_GAIN_6
#define ADS1299_CHN4_SRB2 				SRB2_CONNECT_OPEN
#endif
#define ADS129X_CHN4_MUX				CHN_NORMAL_INPUT
#if (CONFIG_ADS129X_TYPE == 1299)
/* chn5set */
#define ADS129X_CHN5_PD					CHN_PD_OFF
#define ADS129X_CHN5_PGA_GAIN			PGA_GAIN_6
#define ADS1299_CHN5_SRB2 				SRB2_CONNECT_OPEN
#define ADS129X_CHN5_MUX				CHN_NORMAL_INPUT
/* chn6set */
#define ADS129X_CHN6_PD					CHN_PD_OFF
#define ADS129X_CHN6_PGA_GAIN			PGA_GAIN_6
#define ADS1299_CHN6_SRB2 				SRB2_CONNECT_OPEN
#define ADS129X_CHN6_MUX				CHN_NORMAL_INPUT
/* chn7set */
#define ADS129X_CHN7_PD					CHN_PD_OFF
#define ADS129X_CHN7_PGA_GAIN			PGA_GAIN_6
#define ADS1299_CHN7_SRB2 				SRB2_CONNECT_OPEN
#define ADS129X_CHN7_MUX				CHN_NORMAL_INPUT
/* chn8set */
#define ADS129X_CHN8_PD					CHN_PD_OFF
#define ADS129X_CHN8_PGA_GAIN			PGA_GAIN_6
#define ADS1299_CHN8_SRB2 				SRB2_CONNECT_OPEN
#define ADS129X_CHN8_MUX				CHN_NORMAL_INPUT

#define ADS1299_EFFECTIVE_CHN_NUM 4
#endif

#if (CONFIG_ADS129X_TYPE == 1294)
#define ADS1294_CHN1_RLD_SENS_P 		RLD_SENS_ENABLED
#define ADS1294_CHN2_RLD_SENS_P 		RLD_SENS_ENABLED
#define ADS1294_CHN3_RLD_SENS_P 		RLD_SENS_ENABLED
#define ADS1294_CHN4_RLD_SENS_P 		RLD_SENS_ENABLED
#define ADS1294_CHN1_RLD_SENS_N 		RLD_SENS_ENABLED
#define ADS1294_CHN2_RLD_SENS_N 		RLD_SENS_ENABLED
#define ADS1294_CHN3_RLD_SENS_N 		RLD_SENS_ENABLED
#define ADS1294_CHN4_RLD_SENS_N 		RLD_SENS_ENABLED
#endif

#if (CONFIG_ADS129X_TYPE == 1299)
#define ADS1294_CHN1_BIAS_SENS_P 		BIAS_SENS_ENABLED
#define ADS1294_CHN2_BIAS_SENS_P 		BIAS_SENS_ENABLED
#define ADS1294_CHN3_BIAS_SENS_P 		BIAS_SENS_ENABLED
#define ADS1294_CHN4_BIAS_SENS_P 		BIAS_SENS_ENABLED
#define ADS1294_CHN5_BIAS_SENS_P 		BIAS_SENS_ENABLED
#define ADS1294_CHN6_BIAS_SENS_P 		BIAS_SENS_ENABLED
#define ADS1294_CHN7_BIAS_SENS_P 		BIAS_SENS_ENABLED
#define ADS1294_CHN8_BIAS_SENS_P 		BIAS_SENS_ENABLED
#define ADS1294_CHN1_BIAS_SENS_N 		BIAS_SENS_ENABLED
#define ADS1294_CHN2_BIAS_SENS_N 		BIAS_SENS_ENABLED
#define ADS1294_CHN3_BIAS_SENS_N 		BIAS_SENS_ENABLED
#define ADS1294_CHN4_BIAS_SENS_N 		BIAS_SENS_ENABLED
#define ADS1294_CHN5_BIAS_SENS_N 		BIAS_SENS_ENABLED
#define ADS1294_CHN6_BIAS_SENS_N 		BIAS_SENS_ENABLED
#define ADS1294_CHN7_BIAS_SENS_N 		BIAS_SENS_ENABLED
#define ADS1294_CHN8_BIAS_SENS_N 		BIAS_SENS_ENABLED
#endif

#if (CONFIG_ADS129X_TYPE == 1294)
#define ADS1294_CHN1_LOFF_SEN_P 		LOFF_SENS_DISABLED
#define ADS1294_CHN2_LOFF_SEN_P 		LOFF_SENS_DISABLED
#define ADS1294_CHN3_LOFF_SEN_P 		LOFF_SENS_DISABLED
#define ADS1294_CHN4_LOFF_SEN_P 		LOFF_SENS_DISABLED
#define ADS1294_CHN1_LOFF_SEN_N 		LOFF_SENS_DISABLED
#define ADS1294_CHN2_LOFF_SEN_N 		LOFF_SENS_DISABLED
#define ADS1294_CHN3_LOFF_SEN_N 		LOFF_SENS_DISABLED
#define ADS1294_CHN4_LOFF_SEN_N 		LOFF_SENS_DISABLED
#elif (CONFIG_ADS129X_TYPE == 1299)
#define ADS1299_CHN1_LOFF_SEN_P 		LOFF_SENS_DISABLED
#define ADS1299_CHN2_LOFF_SEN_P 		LOFF_SENS_DISABLED
#define ADS1299_CHN3_LOFF_SEN_P 		LOFF_SENS_DISABLED
#define ADS1299_CHN4_LOFF_SEN_P 		LOFF_SENS_DISABLED
#define ADS1299_CHN5_LOFF_SEN_P 		LOFF_SENS_DISABLED
#define ADS1299_CHN6_LOFF_SEN_P 		LOFF_SENS_DISABLED
#define ADS1299_CHN7_LOFF_SEN_P 		LOFF_SENS_DISABLED
#define ADS1299_CHN8_LOFF_SEN_P 		LOFF_SENS_DISABLED
#define ADS1299_CHN1_LOFF_SEN_N 		LOFF_SENS_DISABLED
#define ADS1299_CHN2_LOFF_SEN_N 		LOFF_SENS_DISABLED
#define ADS1299_CHN3_LOFF_SEN_N 		LOFF_SENS_DISABLED
#define ADS1299_CHN4_LOFF_SEN_N 		LOFF_SENS_DISABLED
#define ADS1299_CHN5_LOFF_SEN_N 		LOFF_SENS_DISABLED
#define ADS1299_CHN6_LOFF_SEN_N 		LOFF_SENS_DISABLED
#define ADS1299_CHN7_LOFF_SEN_N 		LOFF_SENS_DISABLED
#define ADS1299_CHN8_LOFF_SEN_N 		LOFF_SENS_DISABLED
#endif

#if (CONFIG_ADS129X_TYPE == 1294)
#define ADS1294_CHN1_LOFF_FLIP 			LOFF_NOT_FLIP
#define ADS1294_CHN2_LOFF_FLIP 			LOFF_NOT_FLIP
#define ADS1294_CHN3_LOFF_FLIP 			LOFF_NOT_FLIP
#define ADS1294_CHN4_LOFF_FLIP 			LOFF_NOT_FLIP
#elif (CONFIG_ADS129X_TYPE == 1299)
#define ADS1299_CHN1_LOFF_FLIP 			LOFF_NOT_FLIP
#define ADS1299_CHN2_LOFF_FLIP 			LOFF_NOT_FLIP
#define ADS1299_CHN3_LOFF_FLIP 			LOFF_NOT_FLIP
#define ADS1299_CHN4_LOFF_FLIP 			LOFF_NOT_FLIP
#define ADS1299_CHN5_LOFF_FLIP 			LOFF_NOT_FLIP
#define ADS1299_CHN6_LOFF_FLIP 			LOFF_NOT_FLIP
#define ADS1299_CHN7_LOFF_FLIP 			LOFF_NOT_FLIP
#define ADS1299_CHN8_LOFF_FLIP 			LOFF_NOT_FLIP
#endif

#define ADS129X_GPIO_D 					0
#define ADS129X_GPIO_C 					OUTPUT_MODE

#if (CONFIG_ADS129X_TYPE == 1294)
#define ADS1294_PACE_E 					PACE_CHN2
#define ADS1294_PACE_O 					PACE_CHN1
#define ADS1294_PACE_PD 				PD_PACE_OFF

#define ADS1294_RESP_CTRL 				RESP_CTRL_EXTERNAL
#define ADS1294_RESP_PHASE 				PHASE_22P5
#define ADS1294_RESP_MOD 				RESP_MOD_OFF
#define ADS1294_DEMOD_EN 				RESP_DEMOD_OFF
#endif

#if (CONFIG_ADS129X_TYPE == 1299)
#define ADS1299_SRB1_SWITCH 			SRB1_SWITCH_OPEN
#endif

#define ADS129X_LOFF_COMP_PD 			LOFF_COMP_DISABLE
#if (CONFIG_ADS129X_TYPE == 1294)
#define ADS1294_WCT_TO_RLD 				WCT_TO_RLD_OFF
#define ADS1294_RESP_FREQ 				RESP_FREQ_64KHZ
#endif
#define ADS129X_SINGLE_SHORT 			CONTINUOUS_MODE

#if (CONFIG_ADS129X_TYPE == 1294)
#define ADS1294_WCTA 					WCTA_CHN1P
#define ADS1294_WCTB 					WCTB_CHN1P
#define ADS1294_WCTC 					WCTC_CHN1P
#define ADS1294_WCTA_PD 				PD_WCTA_OFF
#define ADS1294_WCTB_PD 				PD_WCTB_OFF
#define ADS1294_WCTC_PD 				PD_WCTC_OFF
#define ADS1294_AVR_CHN4 				AVR_CHN_OFF
#define ADS1294_AVR_CHN5 				AVR_CHN_OFF
#define ADS1294_AVR_CHN6 				AVR_CHN_OFF
#define ADS1294_AVR_CHN7 				AVR_CHN_OFF
#endif

#define EEG_DATA_FRAME_HEADER_LOW_FRE_MODE 0xADAD
#define EEG_DATA_FRAME_HEADER_HIGH_FRE_MODE 0xADAD
#define SEND_BUF_NUM 128
#define PATCH_SIZE_LOW_FRE_MODE 10
#define PATCH_SIZE_HIGH_FRE_MODE 100
#define DATA_SIZE 		3
#define CRC_SIZE 		1
#define TS_SIZE 		8			/* 时间戳大小（字节） */
enum
{
	DATA_FRAME_OFT_HEAD = 0,
	DATA_FRAME_OFT_SERIAL = 2,
	DATA_FRAME_OFT_CHN = 5,
	DATA_FRAME_OFT_LEN = 6,
	DATA_FRAME_OFT_DATA = 8,
};
#define DATA_FRAME_OFT_TS_LOW_FRE_MODE 		38
#define DATA_FRAME_OFT_CRC_LOW_FRE_MODE 	46
#define DATA_FRAME_TOTAL_LEN_LOW_FRE_MODE 	47
#define DATA_FRAME_OFT_TS_HIGH_FRE_MODE 	308
#define DATA_FRAME_OFT_CRC_HIGH_FRE_MODE 	316
#define DATA_FRAME_TOTAL_LEN_HIGH_FRE_MODE 	317

typedef enum {
	EEG_NET_AUTO_CONNECT,		/* 自动配网 */
	EEG_NET_MANUAL_CONNECT,		/* 手动配网 */
} EEG_NET_CONNECT_T;

#define EEG_DEFAULT_NET_CONNECT_TYPE 		EEG_NET_MANUAL_CONNECT
#define EEG_DEFAULT_HOST_IP 				"192.168.1.1"
#define EEG_DEFAULT_HOST_PORT 				30300
#define EEG_DEFAULT_SERIAL_NUM 				0
#define EEG_DEFAULT_PROTOCOL 				SOCK_DGRAM
#define MONITOR_FILTER_RUN_TIME 			0
#define EEG_HOST_BROADCAST_PORT 			30200
#define EEG_HOST_BROADCAST_MSG_HEAD 		0xFFFF
#define BROAD_CAST_RECV_BUF_LEN 			256

/* 广播报文偏移 */
enum {
	EEG_BROADCAST_HEAD = 0,
	EEG_BROADCAST_IP = 2,
	EEG_BROADCAST_MASK = 6,
	EEG_BROADCAST_TCP_PORT_NUM = 10,
};

/* 滤波器开关 */
typedef enum {
	FILTER_SWITCH_STATE_OFF = 0,
	FILTER_SWITCH_STATE_ON = 1,
} FILTER_SWITCH_STATE_T;

/* 滤波器默认开关状态 */
#define BP_FILTER_DEFAULT_STATE FILTER_SWITCH_STATE_ON
#define HP_FILTER_DEFAULT_STATE FILTER_SWITCH_STATE_ON
#define LP_FILTER_DEFAULT_STATE FILTER_SWITCH_STATE_ON
#define NOTCH_FILTER_DEFAULT_STATE FILTER_SWITCH_STATE_ON

typedef enum {
	FILTER_DEGREE_2 = 2,
	FILTER_DEGREE_4 = 4,
	FILTER_DEGREE_6 = 6,
} FILTER_DEGREE;
#define SUPPORT_BP_FILTER 1
#define SUPPORT_NOTCH_FILTER 1
#if (SUPPORT_BP_FILTER)
#define BP_FILTER_DEGREE_1KHZ 6
#define BP_FILTER_DEGREE_2KHZ 4
#define BP_FILTER_DEGREE_4KHZ 4
#define BP_FILTER_DEGREE_8KHZ 4
/* 带通滤波器的最大阶数 */
#define MAX_BP_FILTER_DEGREE BP_FILTER_DEGREE_1KHZ
#endif
#if (SUPPORT_NOTCH_FILTER)
#define NOTCH_FILTER_DEGREE 2
#endif

typedef enum {
	ADS129X_FREQ_1KHZ = 0,
	ADS129X_FREQ_2KHZ = 1,
	ADS129X_FREQ_4KHZ = 2,
	ADS129X_FREQ_8KHZ = 3,
	ADS129X_FREQ_NUM,		/* 支持的频率数量 */
} ADS129X_FREQ_T;

#define EEG_DEFAULT_FREQUENCY 				ADS129X_FREQ_2KHZ

#if (SUPPORT_BP_FILTER)
/* 1kHz 6阶带通滤波器 0.2Hz-70Hz */
#define BP_A0_1KHZ_N1       ( 1.0000000000000000)
#define BP_A1_1KHZ_N1       (-1.9987461273181865)
#define BP_A2_1KHZ_N1       ( 0.9987477098769056)
#define BP_B0_1KHZ_N1       ( 1.0000000000000000)
#define BP_B1_1KHZ_N1       ( 0.0000000000000000)
#define BP_B2_1KHZ_N1       (-1.0000000000000000)
#define BP_GAIN_1KHZ_N1     ( 0.1975651674026285)
#define BP_A0_1KHZ_N2       ( 1.0000000000000000)
#define BP_A1_1KHZ_N2       (-1.4938728461152634)
#define BP_A2_1KHZ_N2       ( 0.6505428087336679)
#define BP_B0_1KHZ_N2       ( 1.0000000000000000)
#define BP_B1_1KHZ_N2       ( 0.0000000000000000)
#define BP_B2_1KHZ_N2       (-1.0000000000000000)
#define BP_GAIN_1KHZ_N2     ( 0.1975651674026285)
#define BP_A0_1KHZ_N3       ( 1.0000000000000000)
#define BP_A1_1KHZ_N3       (-1.6350416836653023)
#define BP_A2_1KHZ_N3       ( 0.6355010178142942)
#define BP_B0_1KHZ_N3       ( 1.0000000000000000)
#define BP_B1_1KHZ_N3       ( 0.0000000000000000)
#define BP_B2_1KHZ_N3       (-1.0000000000000000)
#define BP_GAIN_1KHZ_N3     ( 0.1822494910928528)

/* 1kHz 4阶高通滤波器 0.2Hz */
#define HP_A0_1KHZ_N1       ( 1.0000000000000000)
#define HP_A1_1KHZ_N1       (-1.9990370958037271)
#define HP_A2_1KHZ_N1       ( 0.9990386741811910)
#define HP_B0_1KHZ_N1       ( 1.0000000000000000)
#define HP_B1_1KHZ_N1       (-2.0000000000000000)
#define HP_B2_1KHZ_N1       ( 1.0000000000000000)
#define HP_GAIN_1KHZ_N1     ( 0.9995189424962295)
#define HP_A0_1KHZ_N2       ( 1.0000000000000000)
#define HP_A1_1KHZ_N2       (-1.9976791534115974)
#define HP_A2_1KHZ_N2       ( 0.9976807307168724)
#define HP_B0_1KHZ_N2       ( 1.0000000000000000)
#define HP_B1_1KHZ_N2       (-2.0000000000000000)
#define HP_B2_1KHZ_N2       ( 1.0000000000000000)
#define HP_GAIN_1KHZ_N2     ( 0.9988399710321175)

/* 1kHz 4阶低通滤波器 70Hz */
#define LP_A0_1KHZ_N1       ( 1.0000000000000000)
#define LP_A1_1KHZ_N1       (-1.5561044919429063)
#define LP_A2_1KHZ_N1       ( 0.7197811313243702)
#define LP_B0_1KHZ_N1       ( 1.0000000000000000)
#define LP_B1_1KHZ_N1       ( 2.0000000000000000)
#define LP_B2_1KHZ_N1       ( 1.0000000000000000)
#define LP_GAIN_1KHZ_N1     ( 0.0409191598453659)
#define LP_A0_1KHZ_N2       ( 1.0000000000000000)
#define LP_A1_1KHZ_N2       (-1.2987617780741538)
#define LP_A2_1KHZ_N2       ( 0.4353701898440180)
#define LP_B0_1KHZ_N2       ( 1.0000000000000000)
#define LP_B1_1KHZ_N2       ( 2.0000000000000000)
#define LP_B2_1KHZ_N2       ( 1.0000000000000000)
#define LP_GAIN_1KHZ_N2     ( 0.0341521029424660)

/* 2kHz 4阶带通滤波器 */
#define BP_A0_2KHZ_N1 		( 1.0000000000000000)
#define BP_A1_2KHZ_N1 		(-1.9977799221730525)
#define BP_A2_2KHZ_N1 		( 0.9977824483041083)
#define BP_B0_2KHZ_N1 		( 0.0594592291413017)
#define BP_B1_2KHZ_N1 		( 0.0000000000000000)
#define BP_B2_2KHZ_N1 		(-0.0594592291413017)
#define BP_A0_2KHZ_N2 		( 1.0000000000000000)
#define BP_A1_2KHZ_N2 		(-1.8267439079965512)
#define BP_A2_2KHZ_N2 		( 0.8409081688632530)
#define BP_B0_2KHZ_N2 		( 0.0594592291413017)
#define BP_B1_2KHZ_N2 		( 0.0000000000000000)
#define BP_B2_2KHZ_N2 		(-0.0594592291413017)

/* 4kHz 4阶带通滤波器 */
#define BP_A0_4KHZ_N1 		( 1.0000000000000000)
#define BP_A1_4KHZ_N1 		(-1.9988899783014264)
#define BP_A2_4KHZ_N1 		( 0.9988906101999887)
#define BP_B0_4KHZ_N1 		( 0.0303598230466090)
#define BP_B1_4KHZ_N1 		( 0.0000000000000000)
#define BP_B2_4KHZ_N1 		(-0.0303598230466090)
#define BP_A0_4KHZ_N2 		( 1.0000000000000000)
#define BP_A1_4KHZ_N2 		(-1.9133192635259446)
#define BP_A2_4KHZ_N2 		( 0.9170100016515344)
#define BP_B0_4KHZ_N2 		( 0.0303598230466090)
#define BP_B1_4KHZ_N2 		( 0.0000000000000000)
#define BP_B2_4KHZ_N2 		(-0.0303598230466090)

/* 8kHz 4阶带通滤波器 */
#define BP_A0_8KHZ_N1 		( 1.0000000000000000)
#define BP_A1_8KHZ_N1 		(-1.9994449933350408)
#define BP_A2_8KHZ_N1 		( 0.9994451513545542)
#define BP_B0_8KHZ_N1 		( 0.0153436367250947)
#define BP_B1_8KHZ_N1 		( 0.0000000000000000)
#define BP_B2_8KHZ_N1 		(-0.0153436367250947)
#define BP_A0_8KHZ_N2 		( 1.0000000000000000)
#define BP_A1_8KHZ_N2 		(-1.9566639429953529)
#define BP_A2_8KHZ_N2 		( 0.9576063770351024)
#define BP_B0_8KHZ_N2 		( 0.0153436367250946)
#define BP_B1_8KHZ_N2 		( 0.0000000000000000)
#define BP_B2_8KHZ_N2 		(-0.0153436367250946)
#endif /* SUPPORT_BP_FILTER */

#if SUPPORT_NOTCH_FILTER
/* 陷波滤波器参数 1kHz */
#define N_A0_1KHZ 			( 1.0000000000000000)
#define N_A1_1KHZ 			(-1.8380368123470574)
#define N_A2_1KHZ 			( 0.9326262749422515)
#define N_B0_1KHZ 			( 0.9663131374711257)
#define N_B1_1KHZ 			(-1.8380368123470574)
#define N_B2_1KHZ 			( 0.9663131374711257)

/* 陷波滤波器参数 2kHz */
#define N_A0_2KHZ 			( 1.0000000000000000)
#define N_A1_2KHZ 			(-1.9415345741548220)
#define N_A2_2KHZ 			( 0.9657360468434184)
#define N_B0_2KHZ 			( 0.9828680234217092)
#define N_B1_2KHZ 			(-1.9415345741548220)
#define N_B2_2KHZ 			( 0.9828680234217092)

/* 陷波滤波器参数 4kHz */
#define N_A0_4KHZ 			( 1.0000000000000000)
#define N_A1_4KHZ 			(-1.9766079432158492)
#define N_A2_4KHZ 			( 0.9827200072990021)
#define N_B0_4KHZ 			( 0.9913600036495010)
#define N_B1_4KHZ 			(-1.9766079432158492)
#define N_B2_4KHZ 			( 0.9913600036495010)

/* 陷波滤波器参数 8kHz */
#define N_A0_8KHZ 			( 1.0000000000000000)
#define N_A1_8KHZ 			(-1.9897872799649738)
#define N_A2_8KHZ 			( 0.9913225174589670)
#define N_B0_8KHZ 			( 0.9956612587294835)
#define N_B1_8KHZ 			(-1.9897872799649738)
#define N_B2_8KHZ 			( 0.9956612587294835)
#endif /* SUPPORT_NOTCH_FILTER */

#define EEG_CRC_MASK 		0xd5
#define EEG_CRC_TABLE_SIZE 	256

/* 信息报文偏移 */
enum
{
	INFO_OFT_HEAD = 0,
	INFO_OFT_SERIAL = 2,
	INFO_OFT_CHN = 5,
	INFO_OFT_LEN = 6,
	INFO_OFT_DATA = 8,
	INFO_OFT_IDX = 60,
	INFO_OFT_CRC = 68,
	INFO_TOTAL_LEN = 69,
};

#ifndef MAC_ADDR_LEN
#define MAC_ADDR_LEN 6
#endif

#define EEG_INFO_MSG_HEAD 				0x1FF1
#define EEG_INFO_MSG_CHN_NUM 			0xFF
#define EEG_INFO_REPORT_PERIOD 		5		/* 单位：s */

typedef struct _EEG_INFO_PKG
{
	uint32_t device_id;						/* 设备号 */
	uint32_t ip;							/* 本机IP */
	uint8_t mac[MAC_ADDR_LEN];				/* 本机MAC */
	HARDWARE_VERSION hw;					/* 硬件版本信息 */
	uint32_t mcu_num;						/* MCU数量 */
	SOFTWARE_VERSION sw[MCU_NUM];			/* 软件版本信息 */
	uint32_t battery_ratio;					/* 电池电量百分比 */
} EEG_INFO_PKG;

/*************************************************
 * @description			:	初始化肌电模块
 * @param - 			:	无
 * @return 				:	EEG_ERR_T
**************************************************/
EEG_ERR_T eeg_init(void);

/*************************************************
 * @description			:	设置肌电功能状态
 * @param - state		:	要设置的状态
 * @return 				:	无
**************************************************/
void eeg_set_state(uint8_t state);

#ifdef __cplusplus
}
#endif

#endif /* __EEG_H__ */
